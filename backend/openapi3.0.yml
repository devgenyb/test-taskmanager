openapi: 3.0.2
info:
  title: task manager api
  version: "1.0"
servers:
  - url: https://localhost/api/v1
paths:
  /api/v1/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user and return a token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: John Doe
                  email:
                    type: string
                    example: user@example.com
                  token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                  roles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Admin
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The email field is required.
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        items:
                          type: string
                          example: The email field is required.
                      password:
                        type: array
                        items:
                          type: string
                          example: The password field is required.
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: email не найден
        '401':
          description: Invalid password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Неверный пароль
  /api/v1/task:
    get:
      tags:
        - Tasks
      summary: Get a list of tasks
      description: Retrieve a paginated list of tasks.
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: Page number
        - in: query
          name: per_page
          schema:
            type: integer
          description: Number of items per page
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      per_page:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 100
                      last_page:
                        type: integer
                        example: 10
                  links:
                    type: object
                    properties:
                      first:
                        type: string
                        example: http://localhost/api/v1/task?page=1
                      last:
                        type: string
                        example: http://localhost/api/v1/task?page=10
                      next:
                        type: string
                        example: http://localhost/api/v1/task?page=2
                      prev:
                        type: string
                        example: null
    post:
      tags:
        - Tasks
      summary: Create a new task
      description: Create a new task and return its details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The name field is required.
                  errors:
                    type: object
                    properties:
                      name:
                        type: array
                        items:
                          type: string
                          example: The name field is required.
  /api/v1/task/{id}:
    get:
      tags:
        - Tasks
      summary: Get task by ID
      description: Retrieve a single task by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Задача не найдена
    put:
      tags:
        - Tasks
      summary: Update task by ID
      description: Update the details of a task by its ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Нет прав на обновление ресурса
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Задача не найдена

components:
  schemas:
    Task:
      type: object
      required:
        - name
        - description
        - status_id
        - done
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: my test task
        description:
          type: string
          example: test description
        done:
          type: boolean
          example: true
        status:
          type: object
          properties:
            id:
              type: integer
              example: 2
            name:
              type: string
              example: В разработке
        user:
          type: object
          properties:
            id:
              type: integer
              example: 1
            email:
              type: string
              example: admin@admin.com
